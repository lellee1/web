version: '3.8'

services:
  app:
    build: ./app
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=False
      - SECRET_KEY=CXiCTGQ4OVa34jjfjvELBC_BBPH3vp9i7ohTERCAv_lfsW6zuueVp97hyp0LIgEFo2o
      - POSTGRES_DB=homelab_homepage
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    restart: unless-stopped
    depends_on:
      - db
    # Traefik routes to nginx service instead of directly to app
    networks:
      - proxy

  nginx:
    image: nginx:alpine
    container_name: web
    # Removed port mapping - Traefik handles external access
    volumes:
      - ./nginx-http-only.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      # Uncomment the following lines when you have SSL certificates
      # - ./ssl/blackfiber.se.crt:/etc/ssl/certs/blackfiber.se.crt:ro
      # - ./ssl/blackfiber.se.key:/etc/ssl/private/blackfiber.se.key:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`web.blackfiber.se`)"
      - "traefik.http.routers.homepage.entrypoints=http"
      - "traefik.http.middlewares.homepage-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.homepage.middlewares=homepage-https-redirect"
      - "traefik.http.routers.homepage-secure.entrypoints=https"
      - "traefik.http.routers.homepage-secure.rule=Host(`web.blackfiber.se`)"
      - "traefik.http.routers.homepage-secure.tls=true"
      - "traefik.http.routers.homepage-secure.tls.certresolver=cloudflare"
      - "traefik.http.services.homepage.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    depends_on:
      - app
    networks:
      - proxy

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=homelab_homepage
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user -d homelab_homepage"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proxy

volumes:
  static_volume:
  media_volume:
  postgres_data:

networks:
  proxy:
    external: true
